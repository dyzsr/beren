%start main
%token AND
%token APPEND
%token ARROW
%token ASSIGN
%token BAR
%token <bool> BOOL
%token <string> CAPID
%token <char> CHAR
%token COLON
%token COMMA
%token CONCAT
%token CONS
%token DEREF
%token DIV
%token ELSE
%token END
%token EOF
%token EQ
%token FUN
%token FUNCTION
%token GT
%token GTE
%token <string> IDENT
%token IF
%token IN
%token <int> INT
%token LBRACE
%token LBRACK
%token LBRACKBAR
%token LET
%token LOGIC_AND
%token LOGIC_OR
%token LPAREN
%token LT
%token LTE
%token MATCH
%token METHOD
%token MINUS
%token MOD
%token NEQ
%token OF
%token PERIOD
%token PLUS
%token RBRACE
%token RBRACK
%token RBRACKBAR
%token REC
%token RPAREN
%token SEMICOLON
%token SIG
%token <string> STRING
%token THEN
%token TIMES
%token TO
%token TYPE
%token <string> TYPESYMBOL
%token WILDCARD
%token WITH
%nonassoc LAST_BRANCH
%nonassoc BAR
%nonassoc THEN
%nonassoc ELSE
%type <unit> expr
%type <unit> global_decl
%type <unit> main
%%

main:
  global_decl_list EOF

global_decl_list:
  global_decl
| global_decl global_decl_list

global_decl:
  let_decl
| method_decl
| type_decl

let_decl:
  LET is_rec let_binding
| LET is_rec let_binding AND let_binding_list

is_rec:
| REC

let_binding_list:
  let_binding
| let_binding AND let_binding_list

let_binding:
  val_binding
| fun_binding

val_binding:
  pattern EQ expr

fun_binding:
  IDENT prototype EQ expr

method_decl:
  METHOD method_binding
| METHOD method_binding AND method_binding_list

method_binding:
  receiver fun_binding

receiver:
  pattern_with_type

method_binding_list:
  method_binding
| method_binding AND method_binding_list

prototype:
  arg_list
| arg_list COLON type_expr

arg_list:
  highest_prec_pattern
| highest_prec_pattern arg_list

type_decl:
  TYPE type_binding
| TYPE type_binding AND type_binding_list

type_binding_list:
  type_binding
| type_binding AND type_binding_list

type_binding:
  IDENT EQ type_construct
| type_param IDENT EQ type_construct

type_param:
  type_symbol
| LPAREN type_symbol COMMA type_symbol_list RPAREN

type_symbol_list:
  type_symbol
| type_symbol COMMA type_symbol_list

type_symbol:
  TYPESYMBOL

type_construct:
  type_expr
| variants_type
| record_type
| interface_type

variants_type:
  variant_list
| BAR variant_list

variant_list:
  variant
| variant BAR variant_list

variant:
  CAPID
| CAPID OF type_expr

record_type:
  LBRACE RBRACE
| LBRACE field_type_list RBRACE

field_type_list:
  field_type
| field_type SEMICOLON
| field_type SEMICOLON field_type_list

field_type:
  IDENT COLON type_expr

interface_type:
  SIG END
| SIG signature_type_list END

signature_type_list:
  signature_type
| signature_type SEMICOLON
| signature_type SEMICOLON signature_type_list

signature_type:
  IDENT COLON type_expr

type_expr:
  type_infix_function

type_infix_function:
  type_infix_tuple
| type_infix_tuple ARROW type_infix_function

type_infix_tuple:
  inner_type_expr
| inner_type_expr TIMES type_tuple_list

type_tuple_list:
  inner_type_expr
| inner_type_expr TIMES type_tuple_list

inner_type_expr:
  highest_prec_type_expr
| type_specialization

highest_prec_type_expr:
  type_terminal
| LPAREN type_expr RPAREN

type_specialization:
  highest_prec_type_expr IDENT

type_terminal:
  IDENT
| type_symbol

expr:
  local_expr
| if_expr
| match_expr
| lambda_expr
| infix_op

local_expr:
  let_decl IN expr

if_expr:
  IF expr THEN expr
| IF expr THEN expr ELSE expr

match_expr:
  MATCH expr WITH match_list
| MATCH expr WITH BAR match_list

match_list:
  match_branch %prec LAST_BRANCH
| match_branch BAR match_list

match_branch:
  pattern TO expr

lambda_expr:
  fun_expr
| function_expr

fun_expr:
  FUN prototype TO expr

function_expr:
  FUNCTION match_list
| FUNCTION BAR match_list

pattern:
  single_pattern
| mutli_pattern

mutli_pattern:
  single_pattern BAR single_pattern_list

single_pattern_list:
  single_pattern
| single_pattern BAR single_pattern_list

single_pattern:
  pattern_infix

pattern_infix:
  pattern_infix_cons

pattern_infix_cons:
  inner_pattern
| inner_pattern CONS pattern_infix_cons

inner_pattern:
  highest_prec_pattern
| variant_with_value_pattern
| ref_pattern

highest_prec_pattern:
  pattern_terminal
| nested_pattern
| pattern_with_type

pattern_with_type:
  LPAREN pattern COLON type_expr RPAREN

nested_pattern:
  LPAREN pattern RPAREN

pattern_terminal:
  pattern_literal
| unit_pattern
| tuple_pattern
| list_pattern
| array_pattern
| record_pattern
| variable_pattern
| variant_pattern

pattern_literal:
  BOOL
| INT
| MINUS INT
| CHAR
| STRING

unit_pattern:
  unit

tuple_pattern:
  LPAREN pattern COMMA pattern_item_list RPAREN

list_pattern:
  LBRACK RBRACK
| LBRACK pattern_item_list RBRACK

array_pattern:
  LBRACKBAR RBRACKBAR
| LBRACKBAR pattern_item_list RBRACKBAR

pattern_item_list:
  pattern
| pattern COMMA pattern_item_list

record_pattern:
  LBRACE RBRACE
| LBRACE field_pattern_list RBRACE

field_pattern_list:
  field_pattern
| field_pattern SEMICOLON
| field_pattern SEMICOLON field_pattern_list

field_pattern:
  IDENT EQ pattern

variable_pattern:
  IDENT
| WILDCARD

variant_pattern:
  CAPID

variant_with_value_pattern:
  CAPID pattern_terminal
| CAPID LPAREN pattern RPAREN

ref_pattern:
  DEREF pattern_terminal
| DEREF LPAREN pattern RPAREN

infix_op:
  infix_assign

infix_assign:
  infix_or
| binding ASSIGN infix_assign

infix_or:
  infix_and
| infix_or LOGIC_OR infix_and

infix_and:
  infix_cmp
| infix_and LOGIC_AND infix_cmp

infix_cmp:
  infix_cons
| infix_cmp LT infix_append
| infix_cmp LTE infix_append
| infix_cmp GT infix_append
| infix_cmp GTE infix_append
| infix_cmp EQ infix_append
| infix_cmp NEQ infix_append

infix_append:
  infix_cons
| infix_append APPEND infix_cons

infix_cons:
  infix_concat
| infix_concat CONS infix_cons

infix_concat:
  infix_plus
| infix_concat CONCAT infix_plus

infix_plus:
  infix_times
| infix_plus PLUS infix_times
| infix_plus MINUS infix_times

infix_times:
  prefix_minus
| infix_times TIMES prefix_minus
| infix_times DIV prefix_minus
| infix_times MOD prefix_minus

prefix_minus:
  inner_expr
| MINUS prefix_minus
| PLUS prefix_minus
| DEREF prefix_minus

inner_expr:
  highest_prec
| call
| construction

highest_prec:
  terminal
| nested_expr
| expr_with_type

nested_expr:
  LPAREN expr_or_expr_list RPAREN

expr_with_type:
  LPAREN expr COLON type_expr RPAREN

expr_or_expr_list:
  expr
| expr SEMICOLON expr_list

expr_list:
  expr
| expr SEMICOLON expr_list

terminal:
  literal
| binding
| unit
| tuple
| list_value
| array
| record

literal:
  BOOL
| INT
| CHAR
| STRING

binding:
  IDENT
| highest_prec PERIOD IDENT
| module_binding PERIOD IDENT

module_binding:
  CAPID
| module_binding PERIOD CAPID

unit:
  LPAREN RPAREN

tuple:
  LPAREN expr COMMA item_list RPAREN

list_value:
  LBRACK RBRACK
| LBRACK item_list RBRACK

array:
  LBRACKBAR RBRACKBAR
| LBRACKBAR item_list RBRACKBAR

item_list:
  expr
| expr COMMA item_list

record:
  LBRACE RBRACE
| LBRACE field_list RBRACE

field_list:
  field_binding
| field_binding SEMICOLON
| field_binding SEMICOLON field_list

field_binding:
  IDENT EQ expr

call:
  caller highest_prec

caller:
  highest_prec
| call

construction:
  CAPID highest_prec

%%
