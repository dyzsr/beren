.external
  0, print_bool
  1, print_int
  2, print_char
  3, print_string
  4, print_endline

.global
  0, abs
  1, min
  2, max
  3, gcd
  4, fact
  5, expt
  6, println_int

.func 0, %fun_0
.numvars 8
.body
  getarg local(1, %var_1)
  move local(0, n) local(1, %var_1)
  move local(4, %var_4) local(0, n)
  loadint local(5, %var_5) 0
  gte local(3, %var_3) local(4, %var_4) local(5, %var_5)
  loadbool local(7, %var_7) true
  eq _ local(3, %var_3) local(7, %var_7)
  jmpfalse .L2
  move local(2, %var_2) local(0, n)
  jmp .L1
.L2
  move local(6, %var_6) local(0, n)
  intneg local(2, %var_2) local(6, %var_6)
.L1
  setret local(2, %var_2)
  ret

.func 1, %init_1
.numvars 2
.body
  makefunc 0, %fun_0 local(0, %var_0)
  move local(1, abs) local(0, %var_0)
  jmp .L1
.L0
  crash
.L1
  move global(0, abs) local(1, abs)
  ret

.func 2, %fun_2
.numvars 3
.body
  getarg local(1, %var_1)
  move local(0, a) local(1, %var_1)
  makefunc 3, %fun_3 local(2, %var_2)
  capture local(2, %var_2) local(0, a) 0
  setret local(2, %var_2)
  ret

.func 3, %fun_3
.captured
  0, a
.numvars 7
.body
  getarg local(1, %var_1)
  move local(0, b) local(1, %var_1)
  move local(4, %var_4) outer(0, a)
  move local(5, %var_5) local(0, b)
  lte local(3, %var_3) local(4, %var_4) local(5, %var_5)
  loadbool local(6, %var_6) true
  eq _ local(3, %var_3) local(6, %var_6)
  jmpfalse .L2
  move local(2, %var_2) outer(0, a)
  jmp .L1
.L2
  move local(2, %var_2) local(0, b)
.L1
  setret local(2, %var_2)
  ret

.func 4, %init_4
.numvars 2
.body
  makefunc 2, %fun_2 local(0, %var_0)
  move local(1, min) local(0, %var_0)
  jmp .L1
.L0
  crash
.L1
  move global(1, min) local(1, min)
  ret

.func 5, %fun_5
.numvars 3
.body
  getarg local(1, %var_1)
  move local(0, a) local(1, %var_1)
  makefunc 6, %fun_6 local(2, %var_2)
  capture local(2, %var_2) local(0, a) 0
  setret local(2, %var_2)
  ret

.func 6, %fun_6
.captured
  0, a
.numvars 7
.body
  getarg local(1, %var_1)
  move local(0, b) local(1, %var_1)
  move local(4, %var_4) outer(0, a)
  move local(5, %var_5) local(0, b)
  gte local(3, %var_3) local(4, %var_4) local(5, %var_5)
  loadbool local(6, %var_6) true
  eq _ local(3, %var_3) local(6, %var_6)
  jmpfalse .L2
  move local(2, %var_2) outer(0, a)
  jmp .L1
.L2
  move local(2, %var_2) local(0, b)
.L1
  setret local(2, %var_2)
  ret

.func 7, %init_7
.numvars 2
.body
  makefunc 5, %fun_5 local(0, %var_0)
  move local(1, max) local(0, %var_0)
  jmp .L1
.L0
  crash
.L1
  move global(2, max) local(1, max)
  ret

.func 8, %fun_8
.captured
  0, gcd
.numvars 3
.body
  getarg local(1, %var_1)
  move local(0, a) local(1, %var_1)
  makefunc 9, %fun_9 local(2, %var_2)
  capture local(2, %var_2) outer(0, gcd) 1
  capture local(2, %var_2) local(0, a) 0
  setret local(2, %var_2)
  ret

.func 9, %fun_9
.captured
  0, a
  1, gcd
.numvars 13
.body
  getarg local(1, %var_1)
  move local(0, b) local(1, %var_1)
  move local(4, %var_4) local(0, b)
  loadint local(5, %var_5) 0
  eq local(3, %var_3) local(4, %var_4) local(5, %var_5)
  loadbool local(12, %var_12) true
  eq _ local(3, %var_3) local(12, %var_12)
  jmpfalse .L2
  move local(2, %var_2) outer(0, a)
  jmp .L1
.L2
  move local(8, %var_8) outer(1, gcd)
  move local(9, %var_9) local(0, b)
  setarg local(9, %var_9)
  call local(8, %var_8)
  getret local(6, %var_6)
  move local(10, %var_10) outer(0, a)
  move local(11, %var_11) local(0, b)
  intmod local(7, %var_7) local(10, %var_10) local(11, %var_11)
  setarg local(7, %var_7)
  call local(6, %var_6)
  getret local(2, %var_2)
.L1
  setret local(2, %var_2)
  ret

.func 10, %init_10
.numvars 2
.body
  makefunc 8, %fun_8 local(1, %var_1)
  move local(0, gcd) local(1, %var_1)
  capture local(1, %var_1) local(0, gcd) 0
  jmp .L1
.L0
  crash
.L1
  move global(3, gcd) local(0, gcd)
  ret

.func 11, %fun_11
.captured
  0, fact
.numvars 12
.body
  getarg local(1, %var_1)
  move local(0, %arg) local(1, %var_1)
  move local(3, %var_3) local(0, %arg)
  loadint local(4, %var_4) 0
  eq _ local(4, %var_4) local(3, %var_3)
  jmpfalse .L2
  loadint local(2, %var_2) 1
  jmp .L1
.L2
  move local(5, n) local(3, %var_3)
  move local(6, %var_6) local(5, n)
  move local(8, %var_8) outer(0, fact)
  move local(10, %var_10) local(5, n)
  loadint local(11, %var_11) 1
  intsub local(9, %var_9) local(10, %var_10) local(11, %var_11)
  setarg local(9, %var_9)
  call local(8, %var_8)
  getret local(7, %var_7)
  intmul local(2, %var_2) local(6, %var_6) local(7, %var_7)
  jmp .L1
.L3
  crash
.L1
  setret local(2, %var_2)
  ret

.func 12, %init_12
.numvars 2
.body
  makefunc 11, %fun_11 local(1, %var_1)
  move local(0, fact) local(1, %var_1)
  capture local(1, %var_1) local(0, fact) 0
  jmp .L1
.L0
  crash
.L1
  move global(4, fact) local(0, fact)
  ret

.func 13, %fun_13
.captured
  0, expt
.numvars 3
.body
  getarg local(1, %var_1)
  move local(0, a) local(1, %var_1)
  makefunc 14, %fun_14 local(2, %var_2)
  capture local(2, %var_2) local(0, a) 1
  capture local(2, %var_2) outer(0, expt) 0
  setret local(2, %var_2)
  ret

.func 14, %fun_14
.captured
  0, expt
  1, a
.numvars 29
.body
  getarg local(1, %var_1)
  move local(0, n) local(1, %var_1)
  move local(4, %var_4) local(0, n)
  loadint local(5, %var_5) 0
  eq local(3, %var_3) local(4, %var_4) local(5, %var_5)
  loadbool local(28, %var_28) true
  eq _ local(3, %var_3) local(28, %var_28)
  jmpfalse .L4
  loadint local(2, %var_2) 1
  jmp .L1
.L4
  move local(9, %var_9) local(0, n)
  loadint local(10, %var_10) 2
  intmod local(7, %var_7) local(9, %var_9) local(10, %var_10)
  loadint local(8, %var_8) 0
  eq local(6, %var_6) local(7, %var_7) local(8, %var_8)
  loadbool local(27, %var_27) true
  eq _ local(6, %var_6) local(27, %var_27)
  jmpfalse .L3
  move local(13, %var_13) outer(0, expt)
  move local(15, %var_15) outer(1, a)
  move local(16, %var_16) outer(1, a)
  intmul local(14, %var_14) local(15, %var_15) local(16, %var_16)
  setarg local(14, %var_14)
  call local(13, %var_13)
  getret local(11, %var_11)
  move local(17, %var_17) local(0, n)
  loadint local(18, %var_18) 2
  intdiv local(12, %var_12) local(17, %var_17) local(18, %var_18)
  setarg local(12, %var_12)
  call local(11, %var_11)
  getret local(2, %var_2)
  jmp .L2
.L3
  move local(19, %var_19) outer(1, a)
  move local(23, %var_23) outer(0, expt)
  move local(24, %var_24) outer(1, a)
  setarg local(24, %var_24)
  call local(23, %var_23)
  getret local(21, %var_21)
  move local(25, %var_25) local(0, n)
  loadint local(26, %var_26) 1
  intsub local(22, %var_22) local(25, %var_25) local(26, %var_26)
  setarg local(22, %var_22)
  call local(21, %var_21)
  getret local(20, %var_20)
  intmul local(2, %var_2) local(19, %var_19) local(20, %var_20)
.L2
.L1
  setret local(2, %var_2)
  ret

.func 15, %init_15
.numvars 2
.body
  makefunc 13, %fun_13 local(1, %var_1)
  move local(0, expt) local(1, %var_1)
  capture local(1, %var_1) local(0, expt) 0
  jmp .L1
.L0
  crash
.L1
  move global(5, expt) local(0, expt)
  ret

.func 16, %fun_16
.numvars 9
.body
  getarg local(1, %var_1)
  move local(0, x) local(1, %var_1)
  move local(4, %var_4) external(1, print_int)
  move local(5, %var_5) local(0, x)
  setarg local(5, %var_5)
  call local(4, %var_4)
  getret local(3, %var_3)
  loadunit local(6, %var_6)
  eq _ local(6, %var_6) local(3, %var_3)
  jmpfalse .L1
  jmp .L2
.L1
  crash
.L2
  move local(7, %var_7) external(4, print_endline)
  loadstr local(8, %var_8) ""
  setarg local(8, %var_8)
  call local(7, %var_7)
  getret local(2, %var_2)
  setret local(2, %var_2)
  ret

.func 17, %init_17
.numvars 2
.body
  makefunc 16, %fun_16 local(0, %var_0)
  move local(1, println_int) local(0, %var_0)
  jmp .L1
.L0
  crash
.L1
  move global(6, println_int) local(1, println_int)
  ret

.func 18, %init_18
.numvars 53
.body
  move local(2, %var_2) global(6, println_int)
  move local(4, %var_4) global(0, abs)
  loadint local(5, %var_5) 10
  setarg local(5, %var_5)
  call local(4, %var_4)
  getret local(3, %var_3)
  setarg local(3, %var_3)
  call local(2, %var_2)
  getret local(1, %var_1)
  loadunit local(6, %var_6)
  eq _ local(6, %var_6) local(1, %var_1)
  jmpfalse .L2
  jmp .L3
.L2
  crash
.L3
  move local(8, %var_8) global(6, println_int)
  move local(10, %var_10) global(0, abs)
  loadint local(12, %var_12) 123
  intneg local(11, %var_11) local(12, %var_12)
  setarg local(11, %var_11)
  call local(10, %var_10)
  getret local(9, %var_9)
  setarg local(9, %var_9)
  call local(8, %var_8)
  getret local(7, %var_7)
  loadunit local(13, %var_13)
  eq _ local(13, %var_13) local(7, %var_7)
  jmpfalse .L4
  jmp .L5
.L4
  crash
.L5
  move local(15, %var_15) global(6, println_int)
  move local(19, %var_19) global(1, min)
  loadint local(20, %var_20) 123
  setarg local(20, %var_20)
  call local(19, %var_19)
  getret local(17, %var_17)
  loadint local(18, %var_18) 456
  setarg local(18, %var_18)
  call local(17, %var_17)
  getret local(16, %var_16)
  setarg local(16, %var_16)
  call local(15, %var_15)
  getret local(14, %var_14)
  loadunit local(21, %var_21)
  eq _ local(21, %var_21) local(14, %var_14)
  jmpfalse .L6
  jmp .L7
.L6
  crash
.L7
  move local(23, %var_23) global(6, println_int)
  move local(27, %var_27) global(2, max)
  loadint local(28, %var_28) 123
  setarg local(28, %var_28)
  call local(27, %var_27)
  getret local(25, %var_25)
  loadint local(26, %var_26) 456
  setarg local(26, %var_26)
  call local(25, %var_25)
  getret local(24, %var_24)
  setarg local(24, %var_24)
  call local(23, %var_23)
  getret local(22, %var_22)
  loadunit local(29, %var_29)
  eq _ local(29, %var_29) local(22, %var_22)
  jmpfalse .L8
  jmp .L9
.L8
  crash
.L9
  move local(31, %var_31) global(6, println_int)
  move local(35, %var_35) global(3, gcd)
  loadint local(36, %var_36) 48
  setarg local(36, %var_36)
  call local(35, %var_35)
  getret local(33, %var_33)
  loadint local(34, %var_34) 64
  setarg local(34, %var_34)
  call local(33, %var_33)
  getret local(32, %var_32)
  setarg local(32, %var_32)
  call local(31, %var_31)
  getret local(30, %var_30)
  loadunit local(37, %var_37)
  eq _ local(37, %var_37) local(30, %var_30)
  jmpfalse .L10
  jmp .L11
.L10
  crash
.L11
  move local(39, %var_39) global(6, println_int)
  move local(41, %var_41) global(4, fact)
  loadint local(42, %var_42) 10
  setarg local(42, %var_42)
  call local(41, %var_41)
  getret local(40, %var_40)
  setarg local(40, %var_40)
  call local(39, %var_39)
  getret local(38, %var_38)
  loadunit local(43, %var_43)
  eq _ local(43, %var_43) local(38, %var_38)
  jmpfalse .L12
  jmp .L13
.L12
  crash
.L13
  move local(45, %var_45) global(6, println_int)
  move local(49, %var_49) global(5, expt)
  loadint local(50, %var_50) 2
  setarg local(50, %var_50)
  call local(49, %var_49)
  getret local(47, %var_47)
  loadint local(48, %var_48) 16
  setarg local(48, %var_48)
  call local(47, %var_47)
  getret local(46, %var_46)
  setarg local(46, %var_46)
  call local(45, %var_45)
  getret local(44, %var_44)
  loadunit local(51, %var_51)
  eq _ local(51, %var_51) local(44, %var_44)
  jmpfalse .L14
  jmp .L15
.L14
  crash
.L15
  loadunit local(0, %var_0)
  loadunit local(52, %var_52)
  eq _ local(52, %var_52) local(0, %var_0)
  jmpfalse .L0
  jmp .L1
.L0
  crash
.L1
  ret

.entry
.numvars 8
.body
  makefunc 1, %init_1 local(0, var_0)
  call local(0, var_0)
  makefunc 4, %init_4 local(1, var_1)
  call local(1, var_1)
  makefunc 7, %init_7 local(2, var_2)
  call local(2, var_2)
  makefunc 10, %init_10 local(3, var_3)
  call local(3, var_3)
  makefunc 12, %init_12 local(4, var_4)
  call local(4, var_4)
  makefunc 15, %init_15 local(5, var_5)
  call local(5, var_5)
  makefunc 17, %init_17 local(6, var_6)
  call local(6, var_6)
  makefunc 18, %init_18 local(7, var_7)
  call local(7, var_7)
  ret


