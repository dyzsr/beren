.external
  0, print_bool
  1, print_int
  2, print_char
  3, print_string
  4, print_endline

.global
  0, length
  1, length
  2, rev
  3, make
  4, map
  5, map
  6, print_int_list
  7, println_int

.func 0, %fun_0
.captured
  0, length
.numvars 17
.body
  getarg local(1, %var_1)
  move local(0, %arg) local(1, %var_1)
  move local(3, %var_3) local(0, %arg)
  vrnum local(4, %var_4) local(3, %var_3)
  loadint local(5, %var_5) 0
  eq _ local(4, %var_4) local(5, %var_5)
  jmpfalse .L2
  loadint local(2, %var_2) 0
  jmp .L1
.L2
  vrnum local(8, %var_8) local(3, %var_3)
  loadint local(12, %var_12) 1
  eq _ local(8, %var_8) local(12, %var_12)
  jmpfalse .L3
  vrval local(9, %var_9) local(3, %var_3)
  tuplepart local(10, %var_10) local(9, %var_9) 0
  move local(6, h) local(10, %var_10)
  tuplepart local(11, %var_11) local(9, %var_9) 1
  move local(7, t) local(11, %var_11)
  loadint local(13, %var_13) 1
  move local(15, %var_15) outer(0, length)
  move local(16, %var_16) local(7, t)
  setarg local(16, %var_16)
  call local(15, %var_15)
  getret local(14, %var_14)
  intadd local(2, %var_2) local(13, %var_13) local(14, %var_14)
  jmp .L1
.L3
  crash
.L1
  setret local(2, %var_2)
  ret

.func 1, %init_1
.numvars 2
.body
  makefunc 0, %fun_0 local(1, %var_1)
  move local(0, length) local(1, %var_1)
  capture local(1, %var_1) local(0, length) 0
  jmp .L1
.L0
  crash
.L1
  move global(0, length) local(0, length)
  ret

.func 2, %fun_2
.numvars 9
.body
  getarg local(1, %var_1)
  move local(0, l) local(1, %var_1)
  makefunc 3, %fun_3 local(4, %var_4)
  move local(3, aux) local(4, %var_4)
  capture local(4, %var_4) local(3, aux) 0
  jmp .L2
.L1
  crash
.L2
  move local(7, %var_7) local(3, aux)
  loadint local(8, %var_8) 0
  setarg local(8, %var_8)
  call local(7, %var_7)
  getret local(5, %var_5)
  move local(6, %var_6) local(0, l)
  setarg local(6, %var_6)
  call local(5, %var_5)
  getret local(2, %var_2)
  setret local(2, %var_2)
  ret

.func 3, %fun_3
.captured
  0, aux
.numvars 3
.body
  getarg local(1, %var_1)
  move local(0, acc) local(1, %var_1)
  makefunc 4, %fun_4 local(2, %var_2)
  capture local(2, %var_2) outer(0, aux) 1
  capture local(2, %var_2) local(0, acc) 0
  setret local(2, %var_2)
  ret

.func 4, %fun_4
.captured
  0, acc
  1, aux
.numvars 19
.body
  getarg local(1, %var_1)
  move local(0, %arg) local(1, %var_1)
  move local(3, %var_3) local(0, %arg)
  vrnum local(4, %var_4) local(3, %var_3)
  loadint local(5, %var_5) 0
  eq _ local(4, %var_4) local(5, %var_5)
  jmpfalse .L2
  move local(2, %var_2) outer(0, acc)
  jmp .L1
.L2
  vrnum local(8, %var_8) local(3, %var_3)
  loadint local(12, %var_12) 1
  eq _ local(8, %var_8) local(12, %var_12)
  jmpfalse .L3
  vrval local(9, %var_9) local(3, %var_3)
  tuplepart local(10, %var_10) local(9, %var_9) 0
  move local(6, h) local(10, %var_10)
  tuplepart local(11, %var_11) local(9, %var_9) 1
  move local(7, t) local(11, %var_11)
  move local(15, %var_15) outer(1, aux)
  move local(17, %var_17) outer(0, acc)
  loadint local(18, %var_18) 1
  intadd local(16, %var_16) local(17, %var_17) local(18, %var_18)
  setarg local(16, %var_16)
  call local(15, %var_15)
  getret local(13, %var_13)
  move local(14, %var_14) local(7, t)
  setarg local(14, %var_14)
  call local(13, %var_13)
  getret local(2, %var_2)
  jmp .L1
.L3
  crash
.L1
  setret local(2, %var_2)
  ret

.func 5, %init_5
.numvars 2
.body
  makefunc 2, %fun_2 local(0, %var_0)
  move local(1, length) local(0, %var_0)
  jmp .L1
.L0
  crash
.L1
  move global(1, length) local(1, length)
  ret

.func 6, %fun_6
.numvars 9
.body
  getarg local(1, %var_1)
  move local(0, l) local(1, %var_1)
  makefunc 7, %fun_7 local(4, %var_4)
  move local(3, aux) local(4, %var_4)
  capture local(4, %var_4) local(3, aux) 0
  jmp .L2
.L1
  crash
.L2
  move local(7, %var_7) local(3, aux)
  setnum 0
  makevariant local(8, %var_8)
  setarg local(8, %var_8)
  call local(7, %var_7)
  getret local(5, %var_5)
  move local(6, %var_6) local(0, l)
  setarg local(6, %var_6)
  call local(5, %var_5)
  getret local(2, %var_2)
  setret local(2, %var_2)
  ret

.func 7, %fun_7
.captured
  0, aux
.numvars 3
.body
  getarg local(1, %var_1)
  move local(0, acc) local(1, %var_1)
  makefunc 8, %fun_8 local(2, %var_2)
  capture local(2, %var_2) outer(0, aux) 1
  capture local(2, %var_2) local(0, acc) 0
  setret local(2, %var_2)
  ret

.func 8, %fun_8
.captured
  0, acc
  1, aux
.numvars 20
.body
  getarg local(1, %var_1)
  move local(0, %arg) local(1, %var_1)
  move local(3, %var_3) local(0, %arg)
  vrnum local(4, %var_4) local(3, %var_3)
  loadint local(5, %var_5) 0
  eq _ local(4, %var_4) local(5, %var_5)
  jmpfalse .L2
  move local(2, %var_2) outer(0, acc)
  jmp .L1
.L2
  vrnum local(8, %var_8) local(3, %var_3)
  loadint local(12, %var_12) 1
  eq _ local(8, %var_8) local(12, %var_12)
  jmpfalse .L3
  vrval local(9, %var_9) local(3, %var_3)
  tuplepart local(10, %var_10) local(9, %var_9) 0
  move local(6, h) local(10, %var_10)
  tuplepart local(11, %var_11) local(9, %var_9) 1
  move local(7, t) local(11, %var_11)
  move local(15, %var_15) outer(1, aux)
  move local(18, %var_18) local(6, h)
  move local(19, %var_19) outer(0, acc)
  pushpart local(19, %var_19)
  pushpart local(18, %var_18)
  maketuple local(17, %var_17)
  setnum 1
  setval local(17, %var_17)
  makevariant local(16, %var_16)
  setarg local(16, %var_16)
  call local(15, %var_15)
  getret local(13, %var_13)
  move local(14, %var_14) local(7, t)
  setarg local(14, %var_14)
  call local(13, %var_13)
  getret local(2, %var_2)
  jmp .L1
.L3
  crash
.L1
  setret local(2, %var_2)
  ret

.func 9, %init_9
.numvars 2
.body
  makefunc 6, %fun_6 local(0, %var_0)
  move local(1, rev) local(0, %var_0)
  jmp .L1
.L0
  crash
.L1
  move global(2, rev) local(1, rev)
  ret

.func 10, %fun_10
.numvars 3
.body
  getarg local(1, %var_1)
  move local(0, n) local(1, %var_1)
  makefunc 11, %fun_11 local(2, %var_2)
  capture local(2, %var_2) local(0, n) 0
  setret local(2, %var_2)
  ret

.func 11, %fun_11
.captured
  0, n
.numvars 9
.body
  getarg local(1, %var_1)
  move local(0, x) local(1, %var_1)
  makefunc 12, %fun_12 local(4, %var_4)
  capture local(4, %var_4) local(0, x) 1
  move local(3, aux) local(4, %var_4)
  capture local(4, %var_4) local(3, aux) 0
  jmp .L2
.L1
  crash
.L2
  move local(7, %var_7) local(3, aux)
  setnum 0
  makevariant local(8, %var_8)
  setarg local(8, %var_8)
  call local(7, %var_7)
  getret local(5, %var_5)
  move local(6, %var_6) outer(0, n)
  setarg local(6, %var_6)
  call local(5, %var_5)
  getret local(2, %var_2)
  setret local(2, %var_2)
  ret

.func 12, %fun_12
.captured
  0, aux
  1, x
.numvars 3
.body
  getarg local(1, %var_1)
  move local(0, acc) local(1, %var_1)
  makefunc 13, %fun_13 local(2, %var_2)
  capture local(2, %var_2) outer(1, x) 2
  capture local(2, %var_2) outer(0, aux) 1
  capture local(2, %var_2) local(0, acc) 0
  setret local(2, %var_2)
  ret

.func 13, %fun_13
.captured
  0, acc
  1, aux
  2, x
.numvars 15
.body
  getarg local(1, %var_1)
  move local(0, %arg) local(1, %var_1)
  move local(3, %var_3) local(0, %arg)
  loadint local(4, %var_4) 0
  eq _ local(4, %var_4) local(3, %var_3)
  jmpfalse .L2
  move local(2, %var_2) outer(0, acc)
  jmp .L1
.L2
  move local(5, n) local(3, %var_3)
  move local(8, %var_8) outer(1, aux)
  move local(11, %var_11) outer(2, x)
  move local(12, %var_12) outer(0, acc)
  pushpart local(12, %var_12)
  pushpart local(11, %var_11)
  maketuple local(10, %var_10)
  setnum 1
  setval local(10, %var_10)
  makevariant local(9, %var_9)
  setarg local(9, %var_9)
  call local(8, %var_8)
  getret local(6, %var_6)
  move local(13, %var_13) local(5, n)
  loadint local(14, %var_14) 1
  intsub local(7, %var_7) local(13, %var_13) local(14, %var_14)
  setarg local(7, %var_7)
  call local(6, %var_6)
  getret local(2, %var_2)
  jmp .L1
.L3
  crash
.L1
  setret local(2, %var_2)
  ret

.func 14, %init_14
.numvars 2
.body
  makefunc 10, %fun_10 local(0, %var_0)
  move local(1, make) local(0, %var_0)
  jmp .L1
.L0
  crash
.L1
  move global(3, make) local(1, make)
  ret

.func 15, %fun_15
.numvars 3
.body
  getarg local(1, %var_1)
  move local(0, f) local(1, %var_1)
  makefunc 16, %fun_16 local(2, %var_2)
  capture local(2, %var_2) local(0, f) 0
  setret local(2, %var_2)
  ret

.func 16, %fun_16
.captured
  0, f
.numvars 11
.body
  getarg local(1, %var_1)
  move local(0, l) local(1, %var_1)
  makefunc 17, %fun_17 local(4, %var_4)
  capture local(4, %var_4) outer(0, f) 1
  move local(3, iter) local(4, %var_4)
  capture local(4, %var_4) local(3, iter) 0
  jmp .L2
.L1
  crash
.L2
  move local(5, %var_5) global(2, rev)
  move local(9, %var_9) local(3, iter)
  setnum 0
  makevariant local(10, %var_10)
  setarg local(10, %var_10)
  call local(9, %var_9)
  getret local(7, %var_7)
  move local(8, %var_8) local(0, l)
  setarg local(8, %var_8)
  call local(7, %var_7)
  getret local(6, %var_6)
  setarg local(6, %var_6)
  call local(5, %var_5)
  getret local(2, %var_2)
  setret local(2, %var_2)
  ret

.func 17, %fun_17
.captured
  0, iter
  1, f
.numvars 3
.body
  getarg local(1, %var_1)
  move local(0, acc) local(1, %var_1)
  makefunc 18, %fun_18 local(2, %var_2)
  capture local(2, %var_2) outer(1, f) 2
  capture local(2, %var_2) outer(0, iter) 1
  capture local(2, %var_2) local(0, acc) 0
  setret local(2, %var_2)
  ret

.func 18, %fun_18
.captured
  0, acc
  1, iter
  2, f
.numvars 22
.body
  getarg local(1, %var_1)
  move local(0, %arg) local(1, %var_1)
  move local(3, %var_3) local(0, %arg)
  vrnum local(4, %var_4) local(3, %var_3)
  loadint local(5, %var_5) 0
  eq _ local(4, %var_4) local(5, %var_5)
  jmpfalse .L2
  move local(2, %var_2) outer(0, acc)
  jmp .L1
.L2
  vrnum local(8, %var_8) local(3, %var_3)
  loadint local(12, %var_12) 1
  eq _ local(8, %var_8) local(12, %var_12)
  jmpfalse .L3
  vrval local(9, %var_9) local(3, %var_3)
  tuplepart local(10, %var_10) local(9, %var_9) 0
  move local(6, h) local(10, %var_10)
  tuplepart local(11, %var_11) local(9, %var_9) 1
  move local(7, t) local(11, %var_11)
  move local(15, %var_15) outer(1, iter)
  move local(19, %var_19) outer(2, f)
  move local(20, %var_20) local(6, h)
  setarg local(20, %var_20)
  call local(19, %var_19)
  getret local(18, %var_18)
  move local(21, %var_21) outer(0, acc)
  pushpart local(21, %var_21)
  pushpart local(18, %var_18)
  maketuple local(17, %var_17)
  setnum 1
  setval local(17, %var_17)
  makevariant local(16, %var_16)
  setarg local(16, %var_16)
  call local(15, %var_15)
  getret local(13, %var_13)
  move local(14, %var_14) local(7, t)
  setarg local(14, %var_14)
  call local(13, %var_13)
  getret local(2, %var_2)
  jmp .L1
.L3
  crash
.L1
  setret local(2, %var_2)
  ret

.func 19, %init_19
.numvars 2
.body
  makefunc 15, %fun_15 local(0, %var_0)
  move local(1, map) local(0, %var_0)
  jmp .L1
.L0
  crash
.L1
  move global(4, map) local(1, map)
  ret

.func 20, %fun_20
.captured
  0, map
.numvars 3
.body
  getarg local(1, %var_1)
  move local(0, f) local(1, %var_1)
  makefunc 21, %fun_21 local(2, %var_2)
  capture local(2, %var_2) outer(0, map) 1
  capture local(2, %var_2) local(0, f) 0
  setret local(2, %var_2)
  ret

.func 21, %fun_21
.captured
  0, f
  1, map
.numvars 22
.body
  getarg local(1, %var_1)
  move local(0, %arg) local(1, %var_1)
  move local(3, %var_3) local(0, %arg)
  vrnum local(4, %var_4) local(3, %var_3)
  loadint local(5, %var_5) 0
  eq _ local(4, %var_4) local(5, %var_5)
  jmpfalse .L2
  setnum 0
  makevariant local(2, %var_2)
  jmp .L1
.L2
  vrnum local(8, %var_8) local(3, %var_3)
  loadint local(12, %var_12) 1
  eq _ local(8, %var_8) local(12, %var_12)
  jmpfalse .L3
  vrval local(9, %var_9) local(3, %var_3)
  tuplepart local(10, %var_10) local(9, %var_9) 0
  move local(6, h) local(10, %var_10)
  tuplepart local(11, %var_11) local(9, %var_9) 1
  move local(7, t) local(11, %var_11)
  move local(15, %var_15) outer(0, f)
  move local(16, %var_16) local(6, h)
  setarg local(16, %var_16)
  call local(15, %var_15)
  getret local(14, %var_14)
  move local(20, %var_20) outer(1, map)
  move local(21, %var_21) outer(0, f)
  setarg local(21, %var_21)
  call local(20, %var_20)
  getret local(18, %var_18)
  move local(19, %var_19) local(7, t)
  setarg local(19, %var_19)
  call local(18, %var_18)
  getret local(17, %var_17)
  pushpart local(17, %var_17)
  pushpart local(14, %var_14)
  maketuple local(13, %var_13)
  setnum 1
  setval local(13, %var_13)
  makevariant local(2, %var_2)
  jmp .L1
.L3
  crash
.L1
  setret local(2, %var_2)
  ret

.func 22, %init_22
.numvars 2
.body
  makefunc 20, %fun_20 local(1, %var_1)
  move local(0, map) local(1, %var_1)
  capture local(1, %var_1) local(0, map) 0
  jmp .L1
.L0
  crash
.L1
  move global(5, map) local(0, map)
  ret

.func 23, %fun_23
.numvars 15
.body
  getarg local(1, %var_1)
  move local(0, l) local(1, %var_1)
  move local(4, %var_4) external(2, print_char)
  loadchar local(5, %var_5) #'['
  setarg local(5, %var_5)
  call local(4, %var_4)
  getret local(3, %var_3)
  loadunit local(6, %var_6)
  eq _ local(6, %var_6) local(3, %var_3)
  jmpfalse .L1
  jmp .L2
.L1
  crash
.L2
  makefunc 24, %fun_24 local(8, %var_8)
  move local(7, iter) local(8, %var_8)
  capture local(8, %var_8) local(7, iter) 0
  jmp .L4
.L3
  crash
.L4
  move local(10, %var_10) local(7, iter)
  move local(11, %var_11) local(0, l)
  setarg local(11, %var_11)
  call local(10, %var_10)
  getret local(9, %var_9)
  loadunit local(12, %var_12)
  eq _ local(12, %var_12) local(9, %var_9)
  jmpfalse .L5
  jmp .L6
.L5
  crash
.L6
  move local(13, %var_13) external(4, print_endline)
  loadstr local(14, %var_14) ""
  setarg local(14, %var_14)
  call local(13, %var_13)
  getret local(2, %var_2)
  setret local(2, %var_2)
  ret

.func 24, %fun_24
.captured
  0, iter
.numvars 25
.body
  getarg local(1, %var_1)
  move local(0, %arg) local(1, %var_1)
  move local(3, %var_3) local(0, %arg)
  vrnum local(4, %var_4) local(3, %var_3)
  loadint local(5, %var_5) 0
  eq _ local(4, %var_4) local(5, %var_5)
  jmpfalse .L2
  move local(6, %var_6) external(2, print_char)
  loadchar local(7, %var_7) #']'
  setarg local(7, %var_7)
  call local(6, %var_6)
  getret local(2, %var_2)
  jmp .L1
.L2
  vrnum local(10, %var_10) local(3, %var_3)
  loadint local(14, %var_14) 1
  eq _ local(10, %var_10) local(14, %var_14)
  jmpfalse .L3
  vrval local(11, %var_11) local(3, %var_3)
  tuplepart local(12, %var_12) local(11, %var_11) 0
  move local(8, e) local(12, %var_12)
  tuplepart local(13, %var_13) local(11, %var_11) 1
  move local(9, l) local(13, %var_13)
  move local(16, %var_16) external(1, print_int)
  move local(17, %var_17) local(8, e)
  setarg local(17, %var_17)
  call local(16, %var_16)
  getret local(15, %var_15)
  loadunit local(18, %var_18)
  eq _ local(18, %var_18) local(15, %var_15)
  jmpfalse .L4
  jmp .L5
.L4
  crash
.L5
  move local(20, %var_20) external(2, print_char)
  loadchar local(21, %var_21) #','
  setarg local(21, %var_21)
  call local(20, %var_20)
  getret local(19, %var_19)
  loadunit local(22, %var_22)
  eq _ local(22, %var_22) local(19, %var_19)
  jmpfalse .L6
  jmp .L7
.L6
  crash
.L7
  move local(23, %var_23) outer(0, iter)
  move local(24, %var_24) local(9, l)
  setarg local(24, %var_24)
  call local(23, %var_23)
  getret local(2, %var_2)
  jmp .L1
.L3
  crash
.L1
  setret local(2, %var_2)
  ret

.func 25, %init_25
.numvars 2
.body
  makefunc 23, %fun_23 local(0, %var_0)
  move local(1, print_int_list) local(0, %var_0)
  jmp .L1
.L0
  crash
.L1
  move global(6, print_int_list) local(1, print_int_list)
  ret

.func 26, %fun_26
.numvars 9
.body
  getarg local(1, %var_1)
  move local(0, x) local(1, %var_1)
  move local(4, %var_4) external(1, print_int)
  move local(5, %var_5) local(0, x)
  setarg local(5, %var_5)
  call local(4, %var_4)
  getret local(3, %var_3)
  loadunit local(6, %var_6)
  eq _ local(6, %var_6) local(3, %var_3)
  jmpfalse .L1
  jmp .L2
.L1
  crash
.L2
  move local(7, %var_7) external(4, print_endline)
  loadstr local(8, %var_8) ""
  setarg local(8, %var_8)
  call local(7, %var_7)
  getret local(2, %var_2)
  setret local(2, %var_2)
  ret

.func 27, %init_27
.numvars 2
.body
  makefunc 26, %fun_26 local(0, %var_0)
  move local(1, println_int) local(0, %var_0)
  jmp .L1
.L0
  crash
.L1
  move global(7, println_int) local(1, println_int)
  ret

.func 28, %init_28
.numvars 44
.body
  move local(4, %var_4) global(3, make)
  loadint local(5, %var_5) 5
  setarg local(5, %var_5)
  call local(4, %var_4)
  getret local(2, %var_2)
  loadint local(3, %var_3) 1
  setarg local(3, %var_3)
  call local(2, %var_2)
  getret local(1, %var_1)
  move local(6, a) local(1, %var_1)
  jmp .L3
.L2
  crash
.L3
  move local(8, %var_8) global(6, print_int_list)
  move local(9, %var_9) local(6, a)
  setarg local(9, %var_9)
  call local(8, %var_8)
  getret local(7, %var_7)
  loadunit local(10, %var_10)
  eq _ local(10, %var_10) local(7, %var_7)
  jmpfalse .L4
  jmp .L5
.L4
  crash
.L5
  loadint local(13, %var_13) 5
  loadint local(16, %var_16) 4
  loadint local(19, %var_19) 3
  loadint local(22, %var_22) 2
  move local(23, %var_23) local(6, a)
  pushpart local(23, %var_23)
  pushpart local(22, %var_22)
  maketuple local(21, %var_21)
  setnum 1
  setval local(21, %var_21)
  makevariant local(20, %var_20)
  pushpart local(20, %var_20)
  pushpart local(19, %var_19)
  maketuple local(18, %var_18)
  setnum 1
  setval local(18, %var_18)
  makevariant local(17, %var_17)
  pushpart local(17, %var_17)
  pushpart local(16, %var_16)
  maketuple local(15, %var_15)
  setnum 1
  setval local(15, %var_15)
  makevariant local(14, %var_14)
  pushpart local(14, %var_14)
  pushpart local(13, %var_13)
  maketuple local(12, %var_12)
  setnum 1
  setval local(12, %var_12)
  makevariant local(11, %var_11)
  move local(24, b) local(11, %var_11)
  jmp .L7
.L6
  crash
.L7
  move local(26, %var_26) global(6, print_int_list)
  move local(27, %var_27) local(24, b)
  setarg local(27, %var_27)
  call local(26, %var_26)
  getret local(25, %var_25)
  loadunit local(28, %var_28)
  eq _ local(28, %var_28) local(25, %var_25)
  jmpfalse .L8
  jmp .L9
.L8
  crash
.L9
  move local(30, %var_30) global(2, rev)
  move local(31, %var_31) local(24, b)
  setarg local(31, %var_31)
  call local(30, %var_30)
  getret local(29, %var_29)
  move local(32, c) local(29, %var_29)
  jmp .L11
.L10
  crash
.L11
  move local(34, %var_34) global(6, print_int_list)
  move local(35, %var_35) local(32, c)
  setarg local(35, %var_35)
  call local(34, %var_34)
  getret local(33, %var_33)
  loadunit local(36, %var_36)
  eq _ local(36, %var_36) local(33, %var_33)
  jmpfalse .L12
  jmp .L13
.L12
  crash
.L13
  move local(38, %var_38) global(7, println_int)
  move local(40, %var_40) global(1, length)
  move local(41, %var_41) local(32, c)
  setarg local(41, %var_41)
  call local(40, %var_40)
  getret local(39, %var_39)
  setarg local(39, %var_39)
  call local(38, %var_38)
  getret local(37, %var_37)
  loadunit local(42, %var_42)
  eq _ local(42, %var_42) local(37, %var_37)
  jmpfalse .L14
  jmp .L15
.L14
  crash
.L15
  loadunit local(0, %var_0)
  loadunit local(43, %var_43)
  eq _ local(43, %var_43) local(0, %var_0)
  jmpfalse .L0
  jmp .L1
.L0
  crash
.L1
  ret

.entry
.numvars 9
.body
  makefunc 1, %init_1 local(0, var_0)
  call local(0, var_0)
  makefunc 5, %init_5 local(1, var_1)
  call local(1, var_1)
  makefunc 9, %init_9 local(2, var_2)
  call local(2, var_2)
  makefunc 14, %init_14 local(3, var_3)
  call local(3, var_3)
  makefunc 19, %init_19 local(4, var_4)
  call local(4, var_4)
  makefunc 22, %init_22 local(5, var_5)
  call local(5, var_5)
  makefunc 25, %init_25 local(6, var_6)
  call local(6, var_6)
  makefunc 27, %init_27 local(7, var_7)
  call local(7, var_7)
  makefunc 28, %init_28 local(8, var_8)
  call local(8, var_8)
  ret


